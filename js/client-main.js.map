{"version":3,"sources":["../src/client-main.ts"],"names":["PSPrefsDefaults","PSPrefs","dark","nogif","showjoins","onepanel","mute","effectvolume","musicvolume","notifvolume","storageEngine","storage","origin","Config","routes","client","key","value","includes","window","localStorage","load","JSON","parse","getItem","set","update","save","newPrefs","noSave","fixPrefs","Object","assign","setItem","stringify","oldShowjoins","undefined","serverShowjoins","global","showroomjoins","roomid","server","id","isChrome64","navigator","userAgent","alert","PSStreamModel","BattleFormats","PSTeams","usesLocalLadder","list","byKey","deletedTeams","unpackAll","teambuilderFormat","format","ruleSepIndex","indexOf","slice","formatid","toID","formatEntry","getKey","name","baseKey","i","buffer","charAt","trim","unpackOldBuffer","split","line","team","unpackLine","push","unshift","teamIndex","splice","undelete","length","pop","packAll","teams","map","folder","packedTeam","join","pipeIndex","bracketIndex","slashIndex","lastIndexOf","iconCache","PSUser","group","userid","named","registered","avatar","setName","fullName","loggingIn","BattleTextParser","parseNameParts","PS","rooms","room","connectWhenLoggedIn","connect","PSModel","PSServer","defaultserver","host","port","altport","prefix","protocol","httpport","groups","type","order","defaultGroup","getGroup","symbol","PSRoom","options","title","classType","location","closable","connected","canConnect","onParentEvent","width","height","parentElem","rightPopup","notifications","isSubtleNotifying","notify","noAutoDismiss","Error","body","dismissNotification","filter","notification","autoDismissNotifications","setDimensions","receiveLine","args","toHighlight","handleMessage","msg","send","direct","destroy","PlaceholderRoom","queue","down","prefs","user","connection","isOffline","router","roomTypes","leftRoomList","rightRoomList","miniRoomList","popups","leftRoom","rightRoom","activePanel","onePanelMode","leftRoomWidth","mainmenu","arrowKeysUsed","newsHTML","document","querySelector","innerHTML","addRoom","updateLayout","addEventListener","getWidthFor","minWidth","maxWidth","isMainMenu","alreadyUpdating","calculateLeftRoomWidth","roomHeight","offsetHeight","totalWidth","offsetWidth","layoutAlreadyUpdated","receive","endsWith","startsWith","nlIndex","roomid2","console","log","isInit","parseLine","updateRoomTypes","removeRoom","fullMsg","isVisible","left","right","available","excess","leftStretch","rightStretch","Math","floor","createRoom","hyphenIndex","roomType","Model","updated","newRoom","focusRoom","leave","focusLeftRoom","allRooms","concat","roomIndex","focusRightRoom","focusPreview","buf","getPMRoom","myUserid","sort","noFocus","challengeMenuOpen","userid1","userid2","popup","popupid","openChallenge","parentRoomid","leftRoomIndex","rightRoomIndex","newRightRoomid","miniRoomIndex","closePopup","skipUpdate","side"],"mappings":"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","sourcesContent":["/**\r\n * Client main\r\n *\r\n * Dependencies: client-core\r\n *\r\n * Sets up the main client models: Prefs, Teams, User, and PS.\r\n *\r\n * @author Guangcong Luo <guancongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\n/**********************************************************************\r\n * Prefs\r\n *********************************************************************/\r\n\r\n/**\r\n * String that contains only lowercase alphanumeric characters.\r\n */\r\ntype RoomID = string & {__isRoomID: true};\r\n\r\nconst PSPrefsDefaults: {[key: string]: any} = {};\r\n\r\n/**\r\n * Tracks user preferences, stored in localStorage. Contains most local\r\n * data, with the exception of backgrounds, teams, and session data,\r\n * which get their own models.\r\n *\r\n * Updates will name the key updated, so you don't need to overreact.\r\n */\r\nclass PSPrefs extends PSStreamModel<string | null> {\r\n\t/**\r\n\t * Dark mode!\r\n\t */\r\n\tdark = false;\r\n\t/**\r\n\t * Disables animated GIFs, but keeps other animations enabled.\r\n\t * Workaround for a Chrome 64 bug with GIFs.\r\n\t * true - Disable GIFs, will be automatically re-enabled if you\r\n\t *   switch away from Chrome 64.\r\n\t * false - Enable GIFs all the time.\r\n\t * null - Enable GIFs only on Chrome 64.\r\n\t */\r\n\tnogif: boolean | null = null;\r\n\t/**\r\n\t * Show \"User joined\" and \"User left\" messages. serverid:roomid\r\n\t * table. Uses 1 and 0 instead of true/false for JSON packing\r\n\t * reasons.\r\n\t */\r\n\tshowjoins: {[serverid: string]: {[roomid: string]: 1 | 0}} | null = null;\r\n\t/**\r\n\t * true = one panel, false = two panels, left and right\r\n\t */\r\n\tonepanel = false;\r\n\r\n\tmute = false;\r\n\teffectvolume = 50;\r\n\tmusicvolume = 50;\r\n\tnotifvolume = 50;\r\n\r\n\tstorageEngine: 'localStorage' | 'iframeLocalStorage' | '' = '';\r\n\tstorage: {[k: string]: any} = {};\r\n\treadonly origin = `https://${Config.routes.client}`;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tfor (const key in this) {\r\n\t\t\tconst value = (this as any)[key];\r\n\t\t\tif (['storage', 'subscriptions', 'origin', 'storageEngine'].includes(key)) continue;\r\n\t\t\tif (typeof value === 'function') continue;\r\n\t\t\tPSPrefsDefaults[key] = value;\r\n\t\t}\r\n\r\n\t\t// set up local loading\r\n\t\ttry {\r\n\t\t\tif (window.localStorage) {\r\n\t\t\t\tthis.storageEngine = 'localStorage';\r\n\t\t\t\tthis.load(JSON.parse(localStorage.getItem('showdown_prefs')!) || {}, true);\r\n\t\t\t}\r\n\t\t} catch {}\r\n\t}\r\n\t/**\r\n\t * Change a preference.\r\n\t */\r\n\tset<T extends keyof PSPrefs>(key: T, value: PSPrefs[T]) {\r\n\t\tif (value === null) {\r\n\t\t\tdelete this.storage[key];\r\n\t\t\t(this as any)[key] = PSPrefsDefaults[key];\r\n\t\t} else {\r\n\t\t\tthis.storage[key] = value;\r\n\t\t\t(this as any)[key] = value;\r\n\t\t}\r\n\t\tthis.update(key);\r\n\t\tthis.save();\r\n\t}\r\n\tload(newPrefs: object, noSave?: boolean) {\r\n\t\tthis.fixPrefs(newPrefs);\r\n\t\tObject.assign(this, PSPrefsDefaults);\r\n\t\tthis.storage = newPrefs;\r\n\t\tthis.update(null);\r\n\t\tif (!noSave) this.save();\r\n\t}\r\n\tsave() {\r\n\t\tswitch (this.storageEngine) {\r\n\t\tcase 'localStorage':\r\n\t\t\tlocalStorage.setItem('showdown_prefs', JSON.stringify(this.storage));\r\n\t\t}\r\n\t}\r\n\tfixPrefs(newPrefs: any) {\r\n\t\tconst oldShowjoins = newPrefs['showjoins'];\r\n\t\tif (oldShowjoins !== undefined && typeof oldShowjoins !== 'object') {\r\n\t\t\tconst showjoins: {[serverid: string]: {[roomid: string]: 1 | 0}} = {};\r\n\t\t\tconst serverShowjoins: {[roomid: string]: 1 | 0} = {global: (oldShowjoins ? 1 : 0)};\r\n\t\t\tconst showroomjoins = newPrefs['showroomjoins'] as {[roomid: string]: boolean};\r\n\t\t\tfor (const roomid in showroomjoins) {\r\n\t\t\t\tserverShowjoins[roomid] = (showroomjoins[roomid] ? 1 : 0);\r\n\t\t\t}\r\n\t\t\tdelete newPrefs['showroomjoins'];\r\n\t\t\tshowjoins[Config.server.id] = serverShowjoins;\r\n\t\t\tnewPrefs['showjoins'] = showjoins;\r\n\t\t}\r\n\r\n\t\tconst isChrome64 = navigator.userAgent.includes(' Chrome/64.');\r\n\t\tif (newPrefs['nogif'] !== undefined) {\r\n\t\t\tif (!isChrome64) {\r\n\t\t\t\tdelete newPrefs['nogif'];\r\n\t\t\t}\r\n\t\t} else if (isChrome64) {\r\n\t\t\tnewPrefs['nogif'] = true;\r\n\t\t\talert('Your version of Chrome has a bug that makes animated GIFs freeze games sometimes, so certain animations have been disabled. Only some people have the problem, so you can experiment and enable them in the Options menu setting \"Disable GIFs for Chrome 64 bug\".');\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Teams\r\n *********************************************************************/\r\n\r\ninterface Team {\r\n\tname: string;\r\n\tformat: ID;\r\n\tpackedTeam: string;\r\n\tfolder: string;\r\n\t/** The icon cache must be cleared (to `null`) whenever `packedTeam` is modified */\r\n\ticonCache: preact.ComponentChildren;\r\n\tkey: string;\r\n}\r\nif (!window.BattleFormats) window.BattleFormats = {};\r\n\r\n/**\r\n * This model tracks teams and formats, updating when either is updated.\r\n */\r\nclass PSTeams extends PSStreamModel<'team' | 'format'> {\r\n\t/** false if it uses the ladder in the website */\r\n\tusesLocalLadder = false;\r\n\tlist: Team[] = [];\r\n\tbyKey: {[key: string]: Team | undefined} = {};\r\n\tdeletedTeams: [Team, number][] = [];\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\ttry {\r\n\t\t\tthis.unpackAll(localStorage.getItem('showdown_teams'));\r\n\t\t} catch {}\r\n\t}\r\n\tteambuilderFormat(format: string): ID {\r\n\t\tconst ruleSepIndex = format.indexOf('@@@');\r\n\t\tif (ruleSepIndex >= 0) format = format.slice(0, ruleSepIndex);\r\n\t\tconst formatid = toID(format);\r\n\t\tif (!window.BattleFormats) return formatid;\r\n\t\tconst formatEntry = BattleFormats[formatid];\r\n\t\treturn formatEntry?.teambuilderFormat || formatid;\r\n\t}\r\n\tgetKey(name: string) {\r\n\t\tconst baseKey: string = toID(name) || '0';\r\n\t\tlet key = baseKey;\r\n\t\tlet i = 1;\r\n\t\twhile (key in this.byKey) {\r\n\t\t\ti++;\r\n\t\t\tkey = `${baseKey}-${i}`;\r\n\t\t}\r\n\t\treturn key;\r\n\t}\r\n\tunpackAll(buffer: string | null) {\r\n\t\tif (!buffer) {\r\n\t\t\tthis.list = [];\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (buffer.charAt(0) === '[' && !buffer.trim().includes('\\n')) {\r\n\t\t\tthis.unpackOldBuffer(buffer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.list = [];\r\n\t\tfor (const line of buffer.split('\\n')) {\r\n\t\t\tconst team = this.unpackLine(line);\r\n\t\t\tif (team) this.push(team);\r\n\t\t}\r\n\t\tthis.update('team');\r\n\t}\r\n\tpush(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.push(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunshift(team: Team) {\r\n\t\tteam.key = this.getKey(team.name);\r\n\t\tthis.list.unshift(team);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tdelete(team: Team) {\r\n\t\tconst teamIndex = this.list.indexOf(team);\r\n\t\tif (teamIndex < 0) return false;\r\n\t\tthis.deletedTeams.push([team, teamIndex]);\r\n\t\tthis.list.splice(teamIndex, 1);\r\n\t\tdelete this.byKey[team.key];\r\n\t}\r\n\tundelete() {\r\n\t\tif (!this.deletedTeams.length) return;\r\n\t\tconst [team, teamIndex] = this.deletedTeams.pop()!;\r\n\t\tthis.list.splice(teamIndex, 0, team);\r\n\t\tif (this.byKey[team.key]) team.key = this.getKey(team.name);\r\n\t\tthis.byKey[team.key] = team;\r\n\t}\r\n\tunpackOldBuffer(buffer: string) {\r\n\t\talert(`Your team storage format is too old for PS. You'll need to upgrade it at https://${Config.routes.client}/recoverteams.html`);\r\n\t\tthis.list = [];\r\n\t\treturn;\r\n\t}\r\n\tpackAll(teams: Team[]) {\r\n\t\treturn teams.map(team => (\r\n\t\t\t(team.format ? `${team.format}]` : ``) + (team.folder ? `${team.folder}/` : ``) + team.name + `|` + team.packedTeam\r\n\t\t)).join('\\n');\r\n\t}\r\n\tsave() {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem('showdown_teams', this.packAll(this.list));\r\n\t\t} catch {}\r\n\t\tthis.update('team');\r\n\t}\r\n\tunpackLine(line: string): Team | null {\r\n\t\tlet pipeIndex = line.indexOf('|');\r\n\t\tif (pipeIndex < 0) return null;\r\n\t\tlet bracketIndex = line.indexOf(']');\r\n\t\tif (bracketIndex > pipeIndex) bracketIndex = -1;\r\n\t\tlet slashIndex = line.lastIndexOf('/', pipeIndex);\r\n\t\tif (slashIndex < 0) slashIndex = bracketIndex; // line.slice(slashIndex + 1, pipeIndex) will be ''\r\n\t\tlet format = bracketIndex > 0 ? line.slice(0, bracketIndex) : 'gen7';\r\n\t\tif (format.slice(0, 3) !== 'gen') format = 'gen6' + format;\r\n\t\tconst name = line.slice(slashIndex + 1, pipeIndex);\r\n\t\treturn {\r\n\t\t\tname,\r\n\t\t\tformat: format as ID,\r\n\t\t\tfolder: line.slice(bracketIndex + 1, slashIndex > 0 ? slashIndex : bracketIndex + 1),\r\n\t\t\tpackedTeam: line.slice(pipeIndex + 1),\r\n\t\t\ticonCache: null,\r\n\t\t\tkey: '',\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * User\r\n *********************************************************************/\r\n\r\nclass PSUser extends PSModel {\r\n\tname = \"Guest\";\r\n\tgroup = '';\r\n\tuserid = \"guest\" as ID;\r\n\tnamed = false;\r\n\tregistered = false;\r\n\tavatar = \"1\";\r\n\tsetName(fullName: string, named: boolean, avatar: string) {\r\n\t\tconst loggingIn = (!this.named && named);\r\n\t\tconst {name, group} = BattleTextParser.parseNameParts(fullName);\r\n\t\tthis.name = name;\r\n\t\tthis.group = group;\r\n\t\tthis.userid = toID(name);\r\n\t\tthis.named = named;\r\n\t\tthis.avatar = avatar;\r\n\t\tthis.update();\r\n\t\tif (loggingIn) {\r\n\t\t\tfor (const roomid in PS.rooms) {\r\n\t\t\t\tconst room = PS.rooms[roomid]!;\r\n\t\t\t\tif (room.connectWhenLoggedIn) room.connect();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Server\r\n *********************************************************************/\r\n\r\ninterface PSGroup {\r\n\tname?: string;\r\n\ttype?: 'leadership' | 'staff' | 'punishment';\r\n\torder: number;\r\n}\r\n\r\nclass PSServer {\r\n\tid = Config.defaultserver.id;\r\n\thost = Config.defaultserver.host;\r\n\tport = Config.defaultserver.port;\r\n\taltport = Config.defaultserver.altport;\r\n\tregistered = Config.defaultserver.registered;\r\n\tprefix = '/showdown';\r\n\tprotocol: 'http' | 'https' = Config.defaultserver.httpport ? 'https' : 'http';\r\n\tgroups: {[symbol: string]: PSGroup} = {\r\n\t\t'~': {\r\n\t\t\tname: \"Administrator (~)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 101,\r\n\t\t},\r\n\t\t'#': {\r\n\t\t\tname: \"Room Owner (#)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 102,\r\n\t\t},\r\n\t\t'&': {\r\n\t\t\tname: \"Administrator (&)\",\r\n\t\t\ttype: 'leadership',\r\n\t\t\torder: 103,\r\n\t\t},\r\n\t\t'\\u2605': {\r\n\t\t\tname: \"Host (\\u2605)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 104,\r\n\t\t},\r\n\t\t'@': {\r\n\t\t\tname: \"Moderator (@)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 105,\r\n\t\t},\r\n\t\t'%': {\r\n\t\t\tname: \"Driver (%)\",\r\n\t\t\ttype: 'staff',\r\n\t\t\torder: 106,\r\n\t\t},\r\n\t\t// by default, unrecognized ranks go here, between driver and bot\r\n\t\t'*': {\r\n\t\t\tname: \"Bot (*)\",\r\n\t\t\torder: 108,\r\n\t\t},\r\n\t\t'\\u2606': {\r\n\t\t\tname: \"Player (\\u2606)\",\r\n\t\t\torder: 109,\r\n\t\t},\r\n\t\t'+': {\r\n\t\t\tname: \"Voice (+)\",\r\n\t\t\torder: 200,\r\n\t\t},\r\n\t\t' ': {\r\n\t\t\torder: 201,\r\n\t\t},\r\n\t\t'!': {\r\n\t\t\tname: \"Muted (!)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 301,\r\n\t\t},\r\n\t\t'✖': {\r\n\t\t\tname: \"Namelocked (\\u2716)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 302,\r\n\t\t},\r\n\t\t'\\u203d': {\r\n\t\t\tname: \"Locked (\\u203d)\",\r\n\t\t\ttype: 'punishment',\r\n\t\t\torder: 303,\r\n\t\t},\r\n\t};\r\n\tdefaultGroup: PSGroup = {\r\n\t\torder: 107,\r\n\t};\r\n\tgetGroup(symbol: string | undefined) {\r\n\t\treturn this.groups[(symbol || ' ').charAt(0)] || this.defaultGroup;\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * Rooms\r\n *********************************************************************/\r\n\r\ntype PSRoomLocation = 'left' | 'right' | 'popup' | 'mini-window' | 'modal-popup' | 'semimodal-popup';\r\n\r\ninterface RoomOptions {\r\n\tid: RoomID;\r\n\ttitle?: string;\r\n\ttype?: string;\r\n\tlocation?: PSRoomLocation | null;\r\n\t/** Handled after initialization, outside of the constructor */\r\n\tqueue?: Args[];\r\n\tparentElem?: HTMLElement | null;\r\n\tparentRoomid?: RoomID | null;\r\n\trightPopup?: boolean;\r\n\tconnected?: boolean;\r\n\t[k: string]: unknown;\r\n}\r\n\r\ninterface PSNotificationState {\r\n\ttitle: string;\r\n\tbody?: string;\r\n\t/** Used to identify notifications to be dismissed - '' if you only want to autodismiss */\r\n\tid: string;\r\n\t/** normally: automatically dismiss the notification when viewing the room; set this to require manual dismissing */\r\n\tnoAutoDismiss: boolean;\r\n}\r\n\r\n/**\r\n * As a PSStreamModel, PSRoom can emit `Args` to mean \"we received a message\",\r\n * and `null` to mean \"tell Preact to re-render this room\"\r\n */\r\nclass PSRoom extends PSStreamModel<Args | null> implements RoomOptions {\r\n\tid: RoomID;\r\n\ttitle = \"\";\r\n\ttype = '';\r\n\treadonly classType: string = '';\r\n\tlocation: PSRoomLocation = 'left';\r\n\tclosable = true;\r\n\t/**\r\n\t * Whether the room is connected to the server. This mostly tracks\r\n\t * \"should we send /leave if the user closes the room?\"\r\n\t *\r\n\t * In particular, this is `true` after sending `/join`, and `false`\r\n\t * after sending `/leave`, even before the server responds.\r\n\t */\r\n\tconnected: boolean = false;\r\n\t/**\r\n\t * Can this room even be connected to at all?\r\n\t * `true` = pass messages from the server to subscribers\r\n\t * `false` = throw an error if we receive messages from the server\r\n\t */\r\n\treadonly canConnect: boolean = false;\r\n\tconnectWhenLoggedIn: boolean = false;\r\n\tonParentEvent: ((eventId: 'focus' | 'keydown', e?: Event) => false | void) | null = null;\r\n\r\n\twidth = 0;\r\n\theight = 0;\r\n\tparentElem: HTMLElement | null = null;\r\n\trightPopup = false;\r\n\r\n\tnotifications: PSNotificationState[] = [];\r\n\tisSubtleNotifying = false;\r\n\r\n\t// for compatibility with RoomOptions\r\n\t[k: string]: unknown;\r\n\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper();\r\n\t\tthis.id = options.id;\r\n\t\tif (options.title) this.title = options.title;\r\n\t\tif (!this.title) this.title = this.id;\r\n\t\tif (options.type) this.type = options.type;\r\n\t\tif (options.location) this.location = options.location;\r\n\t\tif (options.parentElem) this.parentElem = options.parentElem;\r\n\t\tif (this.location !== 'popup' && this.location !== 'semimodal-popup') this.parentElem = null;\r\n\t\tif (options.rightPopup) this.rightPopup = true;\r\n\t\tif (options.connected) this.connected = true;\r\n\t}\r\n\tnotify(options: {title: string, body?: string, noAutoDismiss?: boolean, id?: string}) {\r\n\t\tif (options.noAutoDismiss && !options.id) {\r\n\t\t\tthrow new Error(`Must specify id for manual dismissing`);\r\n\t\t}\r\n\t\tthis.notifications.push({\r\n\t\t\ttitle: options.title,\r\n\t\t\tbody: options.body,\r\n\t\t\tid: options.id || '',\r\n\t\t\tnoAutoDismiss: options.noAutoDismiss || false,\r\n\t\t});\r\n\t\tPS.update();\r\n\t}\r\n\tdismissNotification(id: string) {\r\n\t\tthis.notifications = this.notifications.filter(notification => notification.id !== id);\r\n\t\tPS.update();\r\n\t}\r\n\tautoDismissNotifications() {\r\n\t\tthis.notifications = this.notifications.filter(notification => notification.noAutoDismiss);\r\n\t\tthis.isSubtleNotifying = false;\r\n\t}\r\n\tsetDimensions(width: number, height: number) {\r\n\t\tif (this.width === width && this.height === height) return;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.update(null);\r\n\t}\r\n\tconnect(): void {\r\n\t\tthrow new Error(`This room is not designed to connect to a server room`);\r\n\t}\r\n\treceiveLine(args: Args): void {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'title': {\r\n\t\t\tthis.title = args[1];\r\n\t\t\tPS.update();\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotify': {\r\n\t\t\tconst [, id, title, body, toHighlight] = args;\r\n\t\t\tthis.notify({title, body, id});\r\n\t\t\tbreak;\r\n\t\t} case 'tempnotifyoff': {\r\n\t\t\tconst [, id] = args;\r\n\t\t\tthis.dismissNotification(id);\r\n\t\t\tbreak;\r\n\t\t} default: {\r\n\t\t\tif (this.canConnect) {\r\n\t\t\t\tthis.update(args);\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(`This room is not designed to receive messages`);\r\n\t\t\t}\r\n\t\t}}\r\n\t}\r\n\thandleMessage(msg: string) {\r\n\t\treturn false;\r\n\t}\r\n\tsend(msg: string, direct?: boolean) {\r\n\t\tif (!direct && !msg) return;\r\n\t\tif (!direct && this.handleMessage(msg)) return;\r\n\r\n\t\tconst id = this.id === 'lobby' ? '' : this.id;\r\n\t\tPS.send(id + '|' + msg);\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.connected) {\r\n\t\t\tthis.send('/noreply /leave', true);\r\n\t\t\tthis.connected = false;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass PlaceholderRoom extends PSRoom {\r\n\tqueue = [] as Args[];\r\n\treadonly classType: 'placeholder' = 'placeholder';\r\n\treceiveLine(args: Args) {\r\n\t\tthis.queue.push(args);\r\n\t}\r\n}\r\n\r\n/**********************************************************************\r\n * PS\r\n *********************************************************************/\r\n\r\ntype RoomType = {Model?: typeof PSRoom, Component: any, title?: string};\r\n\r\n/**\r\n * This model updates:\r\n * - when a room is joined or left\r\n * - changing which room is focused\r\n * - changing the width of the left room, in two-panel mode\r\n */\r\nconst PS = new class extends PSModel {\r\n\tdown: string | boolean = false;\r\n\r\n\tprefs = new PSPrefs();\r\n\tteams = new PSTeams();\r\n\tuser = new PSUser();\r\n\tserver = new PSServer();\r\n\tconnection: PSConnection | null = null;\r\n\tconnected = false;\r\n\t/**\r\n\t * While PS is technically disconnected while it's trying to connect,\r\n\t * it still shows UI like it's connected, so you can click buttons\r\n\t * before the server connection is established.\r\n\t *\r\n\t * `isOffline` is only set if PS is neither connected nor trying to\r\n\t * connect.\r\n\t */\r\n\tisOffline = false;\r\n\r\n\trouter: PSRouter = null!;\r\n\r\n\trooms: {[roomid: string]: PSRoom | undefined} = {};\r\n\troomTypes: {\r\n\t\t[type: string]: RoomType | undefined,\r\n\t} = {};\r\n\t/** List of rooms on the left side of the top tabbar */\r\n\tleftRoomList: RoomID[] = [];\r\n\t/** List of rooms on the right side of the top tabbar */\r\n\trightRoomList: RoomID[] = [];\r\n\t/** List of mini-rooms in the Main Menu */\r\n\tminiRoomList: RoomID[] = [];\r\n\t/** Currently active popups, in stack order (bottom to top) */\r\n\tpopups: RoomID[] = [];\r\n\r\n\t/**\r\n\t * Currently active left room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible left panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.room`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\tleftRoom: PSRoom = null!;\r\n\t/**\r\n\t * Currently active right room.\r\n\t *\r\n\t * In two-panel mode, this will be the visible right panel.\r\n\t *\r\n\t * In one-panel mode, this is the visible room only if it is\r\n\t * `PS.room`. Still tracked when not visible, so we know which\r\n\t * panels to display if PS is resized to two-panel mode.\r\n\t */\r\n\trightRoom: PSRoom | null = null;\r\n\t/**\r\n\t * The currently focused room. Should always be the topmost popup\r\n\t * if it exists. If no popups are open, it should be\r\n\t * `PS.activePanel`.\r\n\t *\r\n\t * Determines which room receives keyboard shortcuts.\r\n\t *\r\n\t * Clicking inside a panel will focus it, in two-panel mode.\r\n\t */\r\n\troom: PSRoom = null!;\r\n\t/**\r\n\t * The currently active panel. Should always be either `PS.leftRoom`\r\n\t * or `PS.rightRoom`. If no popups are open, should be `PS.room`.\r\n\t *\r\n\t * In one-panel mode, determines whether the left or right panel is\r\n\t * visible.\r\n\t */\r\n\tactivePanel: PSRoom = null!;\r\n\t/**\r\n\t * Not to be confused with PSPrefs.onepanel, which is permanent.\r\n\t * PS.onePanelMode will be true if one-panel mode is on, but it will\r\n\t * also be true if the right panel is temporarily hidden (by opening\r\n\t * the Rooms panel and clicking \"Hide\")\r\n\t *\r\n\t * Will NOT be true if only one panel fits onto the screen at the\r\n\t * moment, but resizing will display multiple panels – for that,\r\n\t * check `PS.leftRoomWidth === 0`\r\n\t */\r\n\tonePanelMode = false;\r\n\t/**\r\n\t * 0 = only one panel visible.\r\n\t * n.b. PS will only update if the left room width changes. Resizes\r\n\t * that don't change the left room width will not trigger an update.\r\n\t */\r\n\tleftRoomWidth = 0;\r\n\tmainmenu: MainMenuRoom = null!;\r\n\r\n\t/** Tracks whether or not to display the \"Use arrow keys\" hint */\r\n\tarrowKeysUsed = false;\r\n\r\n\tnewsHTML = document.querySelector('.news-embed .pm-log')?.innerHTML || '';\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.addRoom({\r\n\t\t\tid: '' as RoomID,\r\n\t\t\ttitle: \"Home\",\r\n\t\t});\r\n\r\n\t\tthis.addRoom({\r\n\t\t\tid: 'rooms' as RoomID,\r\n\t\t\ttitle: \"Rooms\",\r\n\t\t});\r\n\r\n\t\tif (this.newsHTML) {\r\n\t\t\tthis.addRoom({\r\n\t\t\t\tid: 'news' as RoomID,\r\n\t\t\t\ttitle: \"News\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.updateLayout();\r\n\t\twindow.addEventListener('resize', () => this.updateLayout());\r\n\t}\r\n\r\n\t// Panel layout\r\n\t///////////////\r\n\t/**\r\n\t * \"minWidth\" and \"maxWidth\" are a bit deceptive here - to be clear,\r\n\t * all PS rooms are expected to responsively support any width from\r\n\t * 320px up, when in single panel mode. These metrics are used purely\r\n\t * to calculate the location of the separator in two-panel mode.\r\n\t *\r\n\t * - `minWidth` - minimum width as a right-panel\r\n\t * - `width` - preferred width, minimum width as a left-panel\r\n\t * - `maxWidth` - maximum width as a left-panel\r\n\t *\r\n\t * PS will only show two panels if it can fit `width` in the left, and\r\n\t * `minWidth` in the right. Extra space will be given to to right panel\r\n\t * until it reaches `width`, then evenly distributed until both panels\r\n\t * reach `maxWidth`, and extra space above that will be given to the\r\n\t * right panel.\r\n\t */\r\n\tgetWidthFor(room: PSRoom) {\r\n\t\tswitch (room.type) {\r\n\t\tcase 'mainmenu':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 340,\r\n\t\t\t\twidth: 628,\r\n\t\t\t\tmaxWidth: 628,\r\n\t\t\t\tisMainMenu: true,\r\n\t\t\t};\r\n\t\tcase 'chat':\r\n\t\tcase 'rooms':\r\n\t\tcase 'battles':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 570,\r\n\t\t\t\tmaxWidth: 640,\r\n\t\t\t};\r\n\t\tcase 'battle':\r\n\t\t\treturn {\r\n\t\t\t\tminWidth: 320,\r\n\t\t\t\twidth: 956,\r\n\t\t\t\tmaxWidth: 1180,\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tminWidth: 640,\r\n\t\t\twidth: 640,\r\n\t\t\tmaxWidth: 640,\r\n\t\t};\r\n\t}\r\n\tupdateLayout(alreadyUpdating?: boolean) {\r\n\t\tconst leftRoomWidth = this.calculateLeftRoomWidth();\r\n\t\tlet roomHeight = document.body.offsetHeight - 56;\r\n\t\tlet totalWidth = document.body.offsetWidth;\r\n\t\tif (leftRoomWidth) {\r\n\t\t\tthis.leftRoom.width = leftRoomWidth;\r\n\t\t\tthis.leftRoom.height = roomHeight;\r\n\t\t\tthis.rightRoom!.width = totalWidth + 1 - leftRoomWidth;\r\n\t\t\tthis.rightRoom!.height = roomHeight;\r\n\t\t} else {\r\n\t\t\tthis.activePanel.width = totalWidth;\r\n\t\t\tthis.activePanel.height = roomHeight;\r\n\t\t}\r\n\r\n\t\tif (this.leftRoomWidth !== leftRoomWidth) {\r\n\t\t\tthis.leftRoomWidth = leftRoomWidth;\r\n\t\t\tif (!alreadyUpdating) this.update(true);\r\n\t\t}\r\n\t}\r\n\tupdate(layoutAlreadyUpdated?: boolean) {\r\n\t\tif (!layoutAlreadyUpdated) this.updateLayout(true);\r\n\t\tsuper.update();\r\n\t}\r\n\treceive(msg: string) {\r\n\t\tmsg = msg.endsWith('\\n') ? msg.slice(0, -1) : msg;\r\n\t\tlet roomid = '' as RoomID;\r\n\t\tif (msg.startsWith('>')) {\r\n\t\t\tconst nlIndex = msg.indexOf('\\n');\r\n\t\t\troomid = msg.slice(1, nlIndex) as RoomID;\r\n\t\t\tmsg = msg.slice(nlIndex + 1);\r\n\t\t}\r\n\t\tconst roomid2 = roomid || 'lobby' as RoomID;\r\n\t\tlet room = PS.rooms[roomid];\r\n\t\tconsole.log('\\u2705 ' + (roomid ? '[' + roomid + '] ' : '') + '%c' + msg, \"color: #007700\");\r\n\t\tlet isInit = false;\r\n\t\tfor (const line of msg.split('\\n')) {\r\n\t\t\tconst args = BattleTextParser.parseLine(line);\r\n\t\t\tswitch (args[0]) {\r\n\t\t\tcase 'init': {\r\n\t\t\t\tisInit = true;\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tconst [, type] = args;\r\n\t\t\t\tif (!room) {\r\n\t\t\t\t\tthis.addRoom({\r\n\t\t\t\t\t\tid: roomid2,\r\n\t\t\t\t\t\ttype,\r\n\t\t\t\t\t\tconnected: true,\r\n\t\t\t\t\t}, roomid === 'staff' || roomid === 'upperstaff');\r\n\t\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\t} else {\r\n\t\t\t\t\troom.type = type;\r\n\t\t\t\t\troom.connected = true;\r\n\t\t\t\t\tthis.updateRoomTypes();\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'deinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tthis.removeRoom(room);\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t} case 'noinit': {\r\n\t\t\t\troom = PS.rooms[roomid2];\r\n\t\t\t\tif (room) {\r\n\t\t\t\t\troom.connected = false;\r\n\t\t\t\t\tif (args[1] === 'namerequired') {\r\n\t\t\t\t\t\troom.connectWhenLoggedIn = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.update();\r\n\t\t\t\tcontinue;\r\n\t\t\t}}\r\n\t\t\tif (room) room.receiveLine(args);\r\n\t\t}\r\n\t\tif (room) room.update(isInit ? [`initdone`] : null);\r\n\t}\r\n\tsend(fullMsg: string) {\r\n\t\tconst pipeIndex = fullMsg.indexOf('|');\r\n\t\tconst roomid = fullMsg.slice(0, pipeIndex) as RoomID;\r\n\t\tconst msg = fullMsg.slice(pipeIndex + 1);\r\n\t\tconsole.log('\\u25b6\\ufe0f ' + (roomid ? '[' + roomid + '] ' : '') + '%c' + msg, \"color: #776677\");\r\n\t\tthis.connection!.send(fullMsg);\r\n\t}\r\n\tisVisible(room: PSRoom) {\r\n\t\tif (this.leftRoomWidth === 0) {\r\n\t\t\t// one panel visible\r\n\t\t\treturn room === this.room;\r\n\t\t} else {\r\n\t\t\t// both panels visible\r\n\t\t\treturn room === this.rightRoom || room === this.leftRoom;\r\n\t\t}\r\n\t}\r\n\tcalculateLeftRoomWidth() {\r\n\t\t// If we don't have both a left room and a right room, obviously\r\n\t\t// just show one room\r\n\t\tif (!this.leftRoom || !this.rightRoom || this.onePanelMode) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\t// The rest of this code can assume we have both a left room and a\r\n\t\t// right room, and also want to show both if they fit\r\n\r\n\t\tconst left = this.getWidthFor(this.leftRoom);\r\n\t\tconst right = this.getWidthFor(this.rightRoom);\r\n\t\tconst available = document.body.offsetWidth;\r\n\r\n\t\tlet excess = available - (left.width + right.width);\r\n\t\tif (excess >= 0) {\r\n\t\t\t// both fit in full size\r\n\t\t\tconst leftStretch = left.maxWidth - left.width;\r\n\t\t\tif (!leftStretch) return left.width;\r\n\t\t\tconst rightStretch = right.maxWidth - right.width;\r\n\t\t\tif (leftStretch + rightStretch >= excess) return left.maxWidth;\r\n\t\t\t// evenly distribute the excess\r\n\t\t\treturn left.width + Math.floor(excess * leftStretch / (leftStretch + rightStretch));\r\n\t\t}\r\n\r\n\t\tif (left.isMainMenu) {\r\n\t\t\tif (available >= left.minWidth + right.width) {\r\n\t\t\t\treturn left.minWidth;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (available >= left.width + right.minWidth) {\r\n\t\t\treturn left.width;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tcreateRoom(options: RoomOptions) {\r\n\t\t// type/side not defined in roomTypes because they need to be guessed before the types are loaded\r\n\t\tif (!options.type) {\r\n\t\t\tconst hyphenIndex = options.id.indexOf('-');\r\n\t\t\tswitch (hyphenIndex < 0 ? options.id : options.id.slice(0, hyphenIndex + 1)) {\r\n\t\t\tcase 'teambuilder': case 'ladder': case 'battles': case 'rooms':\r\n\t\t\tcase 'options': case 'volume': case 'teamdropdown': case 'formatdropdown':\r\n\t\t\tcase 'news':\r\n\t\t\t\toptions.type = options.id;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'battle-': case 'user-': case 'team-':\r\n\t\t\t\toptions.type = options.id.slice(0, hyphenIndex);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'view-':\r\n\t\t\t\toptions.type = 'html';\r\n\t\t\t\tbreak;\r\n\t\t\tcase '':\r\n\t\t\t\toptions.type = 'mainmenu';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\toptions.type = 'chat';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!options.location) {\r\n\t\t\tswitch (options.type) {\r\n\t\t\tcase 'rooms':\r\n\t\t\tcase 'chat':\r\n\t\t\t\toptions.location = 'right';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'options':\r\n\t\t\tcase 'volume':\r\n\t\t\tcase 'user':\r\n\t\t\t\toptions.location = 'popup';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'teamdropdown':\r\n\t\t\tcase 'formatdropdown':\r\n\t\t\t\toptions.location = 'semimodal-popup';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'news':\r\n\t\t\t\toptions.location = 'mini-window';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (options.id.startsWith('pm-')) options.location = 'mini-window';\r\n\t\t}\r\n\r\n\t\tconst roomType = this.roomTypes[options.type];\r\n\t\tif (roomType?.title) options.title = roomType.title;\r\n\t\tconst Model = roomType ? (roomType.Model || PSRoom) : PlaceholderRoom;\r\n\t\treturn new Model(options);\r\n\t}\r\n\tupdateRoomTypes() {\r\n\t\tlet updated = false;\r\n\t\tfor (const roomid in this.rooms) {\r\n\t\t\tconst room = this.rooms[roomid]!;\r\n\t\t\tif (room.type === room.classType) continue;\r\n\t\t\tconst roomType = this.roomTypes[room.type];\r\n\t\t\tif (!roomType) continue;\r\n\r\n\t\t\tconst options: RoomOptions = room;\r\n\t\t\tif (roomType.title) options.title = roomType.title;\r\n\t\t\tconst Model = roomType.Model || PSRoom;\r\n\t\t\tconst newRoom = new Model(options);\r\n\t\t\tthis.rooms[roomid] = newRoom;\r\n\t\t\tif (this.leftRoom === room) this.leftRoom = newRoom;\r\n\t\t\tif (this.rightRoom === room) this.rightRoom = newRoom;\r\n\t\t\tif (this.activePanel === room) this.activePanel = newRoom;\r\n\t\t\tif (this.room === room) this.room = newRoom;\r\n\t\t\tif (roomid === '') this.mainmenu = newRoom as MainMenuRoom;\r\n\r\n\t\t\tif (options.queue) {\r\n\t\t\t\tfor (const args of options.queue) {\r\n\t\t\t\t\troom.receiveLine(args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tupdated = true;\r\n\t\t}\r\n\t\tif (updated) this.update();\r\n\t}\r\n\tfocusRoom(roomid: RoomID) {\r\n\t\tif (this.room.id === roomid) return;\r\n\t\tif (this.leftRoomList.includes(roomid)) {\r\n\t\t\tthis.leftRoom = this.rooms[roomid]!;\r\n\t\t\tthis.activePanel = this.leftRoom;\r\n\t\t\twhile (this.popups.length) this.leave(this.popups.pop()!);\r\n\t\t\tthis.room = this.leftRoom;\r\n\t\t} else if (this.rightRoomList.includes(roomid)) {\r\n\t\t\tthis.rightRoom = this.rooms[roomid]!;\r\n\t\t\tthis.activePanel = this.rightRoom;\r\n\t\t\twhile (this.popups.length) this.leave(this.popups.pop()!);\r\n\t\t\tthis.room = this.rightRoom;\r\n\t\t} else if (this.rooms[roomid]) { // popup\r\n\t\t\tthis.room = this.rooms[roomid]!;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.room.autoDismissNotifications();\r\n\t\tthis.update();\r\n\t\tif (this.room.onParentEvent) this.room.onParentEvent('focus', undefined);\r\n\t\treturn true;\r\n\t}\r\n\tfocusLeftRoom() {\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn this.focusRoom('' as RoomID);\r\n\t\t}\r\n\t\tif (roomIndex === 0) {\r\n\t\t\treturn this.focusRoom(allRooms[allRooms.length - 1]);\r\n\t\t}\r\n\t\treturn this.focusRoom(allRooms[roomIndex - 1]);\r\n\t}\r\n\tfocusRightRoom() {\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn this.focusRoom('' as RoomID);\r\n\t\t}\r\n\t\tif (roomIndex === allRooms.length - 1) {\r\n\t\t\treturn this.focusRoom(allRooms[0]);\r\n\t\t}\r\n\t\treturn this.focusRoom(allRooms[roomIndex + 1]);\r\n\t}\r\n\tfocusPreview(room: PSRoom) {\r\n\t\tif (room !== this.room) return '';\r\n\t\tconst allRooms = this.leftRoomList.concat(this.rightRoomList);\r\n\t\tlet roomIndex = allRooms.indexOf(this.room.id);\r\n\t\tif (roomIndex === -1) {\r\n\t\t\t// inconsistent state: should not happen\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tlet buf = '  ';\r\n\t\tif (roomIndex > 1) { // don't show Home\r\n\t\t\tconst leftRoom = this.rooms[allRooms[roomIndex - 1]]!;\r\n\t\t\tbuf += `\\u2190 ${leftRoom.title}`;\r\n\t\t}\r\n\t\tbuf += (this.arrowKeysUsed ? \" | \" : \" (use arrow keys) \");\r\n\t\tif (roomIndex < allRooms.length - 1) {\r\n\t\t\tconst rightRoom = this.rooms[allRooms[roomIndex + 1]]!;\r\n\t\t\tbuf += `${rightRoom.title} \\u2192`;\r\n\t\t}\r\n\t\treturn buf;\r\n\t}\r\n\tgetPMRoom(userid: ID) {\r\n\t\tconst myUserid = PS.user.userid;\r\n\t\tconst roomid = `pm-${[userid, myUserid].sort().join('-')}` as RoomID;\r\n\t\tif (this.rooms[roomid]) return this.rooms[roomid] as ChatRoom;\r\n\t\tthis.join(roomid);\r\n\t\treturn this.rooms[roomid] as ChatRoom;\r\n\t}\r\n\taddRoom(options: RoomOptions, noFocus?: boolean) {\r\n\t\t// support hardcoded PM room-IDs\r\n\t\tif (options.id.startsWith('challenge-')) {\r\n\t\t\toptions.id = `pm-${options.id.slice(10)}` as RoomID;\r\n\t\t\toptions.challengeMenuOpen = true;\r\n\t\t}\r\n\t\tif (options.id.startsWith('pm-') && options.id.indexOf('-', 3) < 0) {\r\n\t\t\tconst userid1 = PS.user.userid;\r\n\t\t\tconst userid2 = options.id.slice(3);\r\n\t\t\toptions.id = `pm-${[userid1, userid2].sort().join('-')}` as RoomID;\r\n\t\t}\r\n\r\n\t\tif (this.rooms[options.id]) {\r\n\t\t\tfor (let i = 0; i < this.popups.length; i++) {\r\n\t\t\t\tconst popup = this.rooms[this.popups[i]]!;\r\n\t\t\t\tif (popup.parentElem === options.parentElem) {\r\n\t\t\t\t\twhile (this.popups.length > i) {\r\n\t\t\t\t\t\tconst popupid = this.popups.pop()!;\r\n\t\t\t\t\t\tthis.leave(popupid);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!noFocus) {\r\n\t\t\t\tif (options.challengeMenuOpen) {\r\n\t\t\t\t\t(this.rooms[options.id] as ChatRoom).openChallenge();\r\n\t\t\t\t}\r\n\t\t\t\tthis.focusRoom(options.id);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!noFocus) {\r\n\t\t\twhile (this.popups.length && this.popups[this.popups.length - 1] !== options.parentRoomid) {\r\n\t\t\t\tconst popupid = this.popups.pop()!;\r\n\t\t\t\tthis.leave(popupid);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst room = this.createRoom(options);\r\n\t\tthis.rooms[room.id] = room;\r\n\t\tswitch (room.location) {\r\n\t\tcase 'left':\r\n\t\t\tthis.leftRoomList.push(room.id);\r\n\t\t\tif (!noFocus) this.leftRoom = room;\r\n\t\t\tbreak;\r\n\t\tcase 'right':\r\n\t\t\tthis.rightRoomList.push(room.id);\r\n\t\t\tif (this.rightRoomList[this.rightRoomList.length - 2] === 'rooms') {\r\n\t\t\t\tthis.rightRoomList.splice(-2, 1);\r\n\t\t\t\tthis.rightRoomList.push('rooms' as RoomID);\r\n\t\t\t}\r\n\t\t\tif (!noFocus || !this.rightRoom) this.rightRoom = room;\r\n\t\t\tbreak;\r\n\t\tcase 'mini-window':\r\n\t\t\tthis.miniRoomList.push(room.id);\r\n\t\t\tbreak;\r\n\t\tcase 'popup':\r\n\t\tcase 'semimodal-popup':\r\n\t\tcase 'modal-popup':\r\n\t\t\tthis.popups.push(room.id);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif (!noFocus) {\r\n\t\t\tif (!this.popups.length) this.activePanel = room;\r\n\t\t\tthis.room = room;\r\n\t\t}\r\n\t\tif (options.queue) {\r\n\t\t\tfor (const args of options.queue) {\r\n\t\t\t\troom.receiveLine(args);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn room;\r\n\t}\r\n\tremoveRoom(room: PSRoom) {\r\n\t\troom.destroy();\r\n\t\tdelete PS.rooms[room.id];\r\n\r\n\t\tconst leftRoomIndex = PS.leftRoomList.indexOf(room.id);\r\n\t\tif (leftRoomIndex >= 0) {\r\n\t\t\tPS.leftRoomList.splice(leftRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.leftRoom === room) {\r\n\t\t\tPS.leftRoom = this.mainmenu;\r\n\t\t\tif (PS.activePanel === room) PS.activePanel = this.mainmenu;\r\n\t\t\tif (PS.room === room) PS.room = this.mainmenu;\r\n\t\t}\r\n\r\n\t\tconst rightRoomIndex = PS.rightRoomList.indexOf(room.id);\r\n\t\tif (rightRoomIndex >= 0) {\r\n\t\t\tPS.rightRoomList.splice(rightRoomIndex, 1);\r\n\t\t}\r\n\t\tif (PS.rightRoom === room) {\r\n\t\t\tlet newRightRoomid = PS.rightRoomList[rightRoomIndex] || PS.rightRoomList[rightRoomIndex - 1];\r\n\t\t\tPS.rightRoom = newRightRoomid ? PS.rooms[newRightRoomid]! : null;\r\n\t\t\tif (PS.activePanel === room) PS.activePanel = PS.rightRoom || PS.leftRoom;\r\n\t\t\tif (PS.room === room) PS.room = PS.activePanel;\r\n\t\t}\r\n\r\n\t\tif (room.location === 'mini-window') {\r\n\t\t\tconst miniRoomIndex = PS.miniRoomList.indexOf(room.id);\r\n\t\t\tif (miniRoomIndex >= 0) {\r\n\t\t\t\tPS.miniRoomList.splice(miniRoomIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.popups.length && room.id === this.popups[this.popups.length - 1]) {\r\n\t\t\tthis.popups.pop();\r\n\t\t\tPS.room = this.popups.length ? PS.rooms[this.popups[this.popups.length - 1]]! : PS.activePanel;\r\n\t\t}\r\n\r\n\t\tthis.update();\r\n\t}\r\n\tclosePopup(skipUpdate?: boolean) {\r\n\t\tif (!this.popups.length) return;\r\n\t\tthis.leave(this.popups[this.popups.length - 1]);\r\n\t\tif (!skipUpdate) this.update();\r\n\t}\r\n\tjoin(roomid: RoomID, side?: PSRoomLocation | null, noFocus?: boolean) {\r\n\t\tif (this.room.id === roomid) return;\r\n\t\tthis.addRoom({id: roomid, side}, noFocus);\r\n\t\tthis.update();\r\n\t}\r\n\tleave(roomid: RoomID) {\r\n\t\tconst room = PS.rooms[roomid];\r\n\t\tif (room) this.removeRoom(room);\r\n\t}\r\n};\r\n"],"file":"client-main.js"}