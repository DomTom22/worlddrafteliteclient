{"version":3,"sources":["../src/panel-rooms.tsx"],"names":["RoomsRoom","options","classType","PS","send","PSRoom","RoomsPanel","hidden","search","lastKeyCode","hide","rightRoom","room","leftRoom","forceUpdate","update","changeSearch","e","target","currentTarget","selectionStart","selectionEnd","value","keyDownSearch","keyCode","arrowIndex","indexOf","slice","test","toID","preventDefault","stopImmediatePropagation","join","componentDidMount","subscriptions","push","user","subscribe","named","runSearch","searchid","exactMatch","rooms","mainmenu","roomsCache","roomList","official","pspl","chat","subRooms","title","desc","start","filter","titleid","startsWith","replace","includes","abbr","toLowerCase","autoFill","firstTitle","firstTitleOffset","length","autoFillValue","oldSearch","searchElem","base","querySelector","setSelectionRange","focus","render","isVisible","props","renderRoomList","userCount","battleCount","isOffline","undefined","sortedRooms","sort","a","b","map","roomInfo","roomName","i","PSRoomPanel","roomTypes","Model","Component","updateRoomTypes"],"mappings":"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","sourcesContent":["/**\r\n * Room-list panel (default right-panel)\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license AGPLv3\r\n */\r\n\r\nclass RoomsRoom extends PSRoom {\r\n\treadonly classType: string = 'rooms';\r\n\tconstructor(options: RoomOptions) {\r\n\t\tsuper(options);\r\n\t\tPS.send(`|/cmd rooms`);\r\n\t}\r\n}\r\n\r\nclass RoomsPanel extends PSRoomPanel {\r\n\thidden = false;\r\n\tsearch = '';\r\n\tlastKeyCode = 0;\r\n\tcomponentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t\tthis.subscriptions.push(PS.user.subscribe(() => {\r\n\t\t\tif (PS.user.named) PS.send(`|/cmd rooms`);\r\n\t\t}));\r\n\t}\r\n\thide = () => {\r\n\t\tthis.hidden = true;\r\n\t\tPS.rightRoom = null;\r\n\t\tPS.room = PS.leftRoom;\r\n\t\tthis.forceUpdate();\r\n\t\tPS.update();\r\n\t};\r\n\tchangeSearch = (e: Event) => {\r\n\t\tconst target = (e.currentTarget as HTMLInputElement);\r\n\t\tif (target.selectionStart !== target.selectionEnd) return;\r\n\t\tthis.search = target.value;\r\n\t\tthis.forceUpdate();\r\n\t};\r\n\tkeyDownSearch = (e: KeyboardEvent) => {\r\n\t\tthis.lastKeyCode = e.keyCode;\r\n\t\tif (e.keyCode === 13) {\r\n\t\t\tconst target = (e.currentTarget as HTMLInputElement);\r\n\t\t\tlet value = target.value;\r\n\t\t\tconst arrowIndex = value.indexOf(' \\u21d2 ');\r\n\t\t\tif (arrowIndex >= 0) value = value.slice(arrowIndex + 3);\r\n\t\t\tif (!/^[a-z0-9-]$/.test(value)) value = toID(value);\r\n\r\n\t\t\te.preventDefault();\r\n\t\t\te.stopImmediatePropagation();\r\n\t\t\ttarget.value = '';\r\n\r\n\t\t\tPS.join(value as RoomID);\r\n\t\t}\r\n\t};\r\n\trunSearch() {\r\n\t\tconst searchid = toID(this.search);\r\n\t\tlet exactMatch = false;\r\n\r\n\t\tconst rooms = PS.mainmenu.roomsCache;\r\n\t\tlet roomList = [...(rooms.official || []), ...(rooms.pspl || []), ...(rooms.chat || [])];\r\n\t\tfor (const room of roomList) {\r\n\t\t\tif (!room.subRooms) continue;\r\n\t\t\tfor (const title of room.subRooms) {\r\n\t\t\t\troomList.push({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tdesc: `Subroom of ${room.title}`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet start = roomList.filter(room => {\r\n\t\t\tconst titleid = toID(room.title);\r\n\t\t\tif (titleid === searchid) exactMatch = true;\r\n\t\t\treturn titleid.startsWith(searchid) ||\r\n\t\t\t\ttoID(room.title.replace(/^The /, '')).startsWith(searchid);\r\n\t\t});\r\n\t\troomList = roomList.filter(room => !start.includes(room));\r\n\r\n\t\tlet abbr = roomList.filter(room =>\r\n\t\t\ttoID(room.title.toLowerCase().replace(/\\b([a-z0-9])[a-z0-9]*\\b/g, '$1')).startsWith(searchid) ||\r\n\t\t\troom.title.replace(/[^A-Z0-9]+/g, '').toLowerCase().startsWith(searchid)\r\n\t\t);\r\n\r\n\t\tconst hidden = !exactMatch ? [{title: this.search, desc: \"(Private room?)\"}] : [];\r\n\r\n\t\tconst autoFill = this.lastKeyCode !== 127 && this.lastKeyCode >= 32;\r\n\t\tif (autoFill) {\r\n\t\t\tconst firstTitle = (start[0] || abbr[0] || hidden[0]).title;\r\n\t\t\tlet firstTitleOffset = 0;\r\n\t\t\twhile (\r\n\t\t\t\tsearchid !== toID(firstTitle.slice(0, firstTitleOffset)) &&\r\n\t\t\t\tfirstTitleOffset < firstTitle.length // should never happen, but sanity against infinite loop\r\n\t\t\t) {\r\n\t\t\t\tfirstTitleOffset++;\r\n\t\t\t}\r\n\t\t\tlet autoFillValue = firstTitle.slice(firstTitleOffset);\r\n\t\t\tif (!autoFillValue && toID(firstTitle) !== searchid) {\r\n\t\t\t\tautoFillValue = ' \\u21d2 ' + firstTitle;\r\n\t\t\t}\r\n\t\t\tconst oldSearch = this.search;\r\n\t\t\tconst searchElem = this.base!.querySelector('input[type=search]') as HTMLInputElement;\r\n\t\t\tsearchElem.value = oldSearch + autoFillValue;\r\n\t\t\tsearchElem.setSelectionRange(oldSearch.length, oldSearch.length + autoFillValue.length);\r\n\t\t}\r\n\r\n\t\treturn {start, abbr, hidden};\r\n\t}\r\n\tfocus() {\r\n\t\t(this.base!.querySelector('input[type=search]') as HTMLInputElement).focus();\r\n\t}\r\n\trender() {\r\n\t\tif (this.hidden && PS.isVisible(this.props.room)) this.hidden = false;\r\n\t\tif (this.hidden) {\r\n\t\t\treturn <PSPanelWrapper room={this.props.room} scrollable>{null}</PSPanelWrapper>;\r\n\t\t}\r\n\t\tconst rooms = PS.mainmenu.roomsCache;\r\n\r\n\t\tlet roomList;\r\n\t\tif (this.search) {\r\n\t\t\tconst search = this.runSearch();\r\n\t\t\troomList = [\r\n\t\t\t\tthis.renderRoomList(\"Search results\", search.start),\r\n\t\t\t\tthis.renderRoomList(\"Search results (acronym)\", search.abbr),\r\n\t\t\t\tthis.renderRoomList(\"Possible hidden room\", search.hidden),\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\troomList = [\r\n\t\t\t\tthis.renderRoomList(\"Official chat rooms\", rooms.official),\r\n\t\t\t\tthis.renderRoomList(\"PSPL winner\", rooms.pspl),\r\n\t\t\t\tthis.renderRoomList(\"Chat rooms\", rooms.chat),\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn <PSPanelWrapper room={this.props.room} scrollable><div class=\"pad\">\r\n\t\t\t<button class=\"button\" style=\"float:right;font-size:10pt;margin-top:3px\" onClick={this.hide}>\r\n\t\t\t\t<i class=\"fa fa-caret-right\"></i> Hide\r\n\t\t\t</button>\r\n\t\t\t<div class=\"roomcounters\">\r\n\t\t\t\t<button class=\"button\" data-href=\"/users\" title=\"Find an online user\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"pixelated usercount\"\r\n\t\t\t\t\t\ttitle=\"Meloetta is PS's mascot! The Aria forme is about using its voice, and represents our chatrooms.\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t\t<strong>{rooms.userCount || '-'}</strong> users online\r\n\t\t\t\t</button> {}\r\n\t\t\t\t<button class=\"button\" data-href=\"/battles\" title=\"Watch an active battle\">\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"pixelated battlecount\"\r\n\t\t\t\t\t\ttitle=\"Meloetta is PS's mascot! The Pirouette forme is Fighting-type, and represents our battles.\"\r\n\t\t\t\t\t></span>\r\n\t\t\t\t\t<strong>{rooms.battleCount || '-'}</strong> active battles\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"search\" name=\"roomsearch\" class=\"textbox\" style=\"width: 100%; max-width: 480px\"\r\n\t\t\t\t\tplaceholder=\"Join or search for rooms\"\r\n\t\t\t\t\tonInput={this.changeSearch} onKeyDown={this.keyDownSearch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{PS.isOffline ? <h2>(offline)</h2> : rooms.userCount === undefined && <h2>Connecting...</h2>}\r\n\t\t\t{roomList}\r\n\t\t</div></PSPanelWrapper>;\r\n\t}\r\n\trenderRoomList(title: string, rooms?: RoomInfo[]) {\r\n\t\tif (!rooms || !rooms.length) return null;\r\n\t\t// Descending order\r\n\t\tconst sortedRooms = rooms.sort((a, b) => (b.userCount || 0) - (a.userCount || 0));\r\n\t\treturn <div class=\"roomlist\">\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{sortedRooms.map(roomInfo => <div>\r\n\t\t\t\t<a href={`/${toID(roomInfo.title)}`} class=\"blocklink\">\r\n\t\t\t\t\t{roomInfo.userCount !== undefined && <small style=\"float:right\">({roomInfo.userCount} users)</small>}\r\n\t\t\t\t\t<strong><i class=\"fa fa-comment-o\"></i> {roomInfo.title}<br /></strong>\r\n\t\t\t\t\t<small>{roomInfo.desc || ''}</small>\r\n\t\t\t\t\t{roomInfo.subRooms && <small><br />\r\n\t\t\t\t\t\t<i class=\"fa fa-level-up fa-rotate-90\"></i> Subrooms: <strong>\r\n\t\t\t\t\t\t\t{roomInfo.subRooms.map((roomName, i) => [\r\n\t\t\t\t\t\t\t\t<i class=\"fa fa-comment-o\"></i>, \" \" + roomName + (i === roomInfo.subRooms!.length - 1 ? \"\" : \", \"),\r\n\t\t\t\t\t\t\t])}\r\n\t\t\t\t\t\t</strong>\r\n\t\t\t\t\t</small>}\r\n\t\t\t\t</a>\r\n\t\t\t</div>)}\r\n\t\t</div>;\r\n\t}\r\n}\r\n\r\nPS.roomTypes['rooms'] = {\r\n\tModel: RoomsRoom,\r\n\tComponent: RoomsPanel,\r\n};\r\nPS.updateRoomTypes();\r\n"],"file":"panel-rooms.js"}